buildscript {
	ext {
		springBootVersion = '2.0.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'vn.com.itworks'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile 'org.springframework.boot:spring-boot-starter-web'
	compile("org.springframework.boot:spring-boot-starter-jdbc")
	testCompile 'org.springframework.boot:spring-boot-starter-test'
	compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.16.10'

	compile "org.postgresql:postgresql:42.2.2"
	compile "com.zaxxer:HikariCP:2.6.1"

}

configurations {
	integrationTestCompile.extendsFrom testCompile
	integrationTestRuntime.extendsFrom runtimeCompile
}

sourceSets {
	integrationTest {
		java {
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
			srcDir file('src/integrationTest/java')
		}
		resources.srcDir file('src/integrationTest/resources')
	}
}

task integrationTest(type: Test) {
	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath
	outputs.upToDateWhen { false }
}

tasks.withType(Test) {
	reports.html.destination = file("${reporting.baseDir}/${name}")
}

integrationTest.mustRunAfter test
